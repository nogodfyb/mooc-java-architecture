spring.application.name=stream-sample
server.port=63003

# RabbitMQ\u8FDE\u63A5\u5B57\u7B26\u4E32
spring.rabbitmq.host=192.168.226.128
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# \u7ED1\u5B9AChannel\u5230broadcast
spring.cloud.stream.bindings.myTopic-consumer.destination=broadcast
spring.cloud.stream.bindings.myTopic-producer.destination=broadcast

# \u6D88\u606F\u5206\u7EC4\u793A\u4F8B
spring.cloud.stream.bindings.group-consumer.destination=group-topic
spring.cloud.stream.bindings.group-producer.destination=group-topic
spring.cloud.stream.bindings.group-consumer.group=Group-A

## \u6D88\u606F\u5206\u533A\u914D\u7F6E
## \u6253\u5F00\u6D88\u8D39\u8005\u7684\u6D88\u8D39\u5206\u533A\u529F\u80FD
spring.cloud.stream.bindings.group-consumer.consumer.partitioned=true
## \u4E24\u4E2A\u6D88\u606F\u5206\u533A
spring.cloud.stream.bindings.group-producer.producer.partition-count=2
# SpEL (Key resolver) \u53EF\u4EE5\u5B9A\u4E49\u590D\u6742\u8868\u8FBE\u5F0F\u751F\u6210Key
# \u6211\u4EEC\u8FD9\u91CC\u7528\u6700\u7B80\u5316\u7684\u914D\u7F6E\uFF0C\u53EA\u6709\u7D22\u5F15\u53C2\u6570\u4E3A1\u7684\u8282\u70B9\uFF08\u6D88\u8D39\u8005\uFF09\uFF0C\u624D\u80FD\u6D88\u8D39\u6D88\u606F
spring.cloud.stream.bindings.group-producer.producer.partition-key-expression=1
# \u5F53\u524D\u6D88\u8D39\u8005\u5B9E\u4F8B\u603B\u6570
spring.cloud.stream.instanceCount=2
# \u6700\u5927\u503CinstanceCount-1\uFF0C\u5F53\u524D\u5B9E\u4F8B\u7684\u7D22\u5F15\u53F7
spring.cloud.stream.instanceIndex=1

# \u5EF6\u8FDF\u6D88\u606F\u914D\u7F6E
#spring.cloud.stream.bindings.delayed-consumer.destination=delayed-topic
#spring.cloud.stream.bindings.delayed-producer.destination=delayed-topic
#spring.cloud.stream.rabbit.bindings.delayed-producer.producer.delayed-exchange=true

# \u5F02\u5E38\u6D88\u606F\uFF08\u5355\u673A\u7248\u91CD\u8BD5\uFF09
spring.cloud.stream.bindings.error-consumer.destination=error-out-topic
spring.cloud.stream.bindings.error-producer.destination=error-out-topic
# \u91CD\u8BD5\u6B21\u6570\uFF08\u672C\u673A\u91CD\u8BD5\uFF09
# \u6B21\u6570=1\u76F8\u5F53\u4E8E\u4E0D\u91CD\u8BD5
spring.cloud.stream.bindings.error-consumer.consumer.max-attempts=2

# \u5F02\u5E38\u6D88\u606F\uFF08requeue\u91CD\u8BD5\uFF09
spring.cloud.stream.bindings.requeue-consumer.destination=requeue-topic
spring.cloud.stream.bindings.requeue-producer.destination=requeue-topic
# \u5FC5\u987B\u628Amax-attempts\u8BBE\u7F6E\u4E3A1\uFF0C\u5426\u5219requeue\u4E0D\u80FD\u751F\u6548
spring.cloud.stream.bindings.requeue-consumer.consumer.max-attempts=1
spring.cloud.stream.bindings.requeue-consumer.group=requeue-group
# \u4EC5\u5BF9\u5F53\u524Drequeue-consumer\uFF0C\u5F00\u542Frequeue
spring.cloud.stream.rabbit.bindings.requeue-consumer.consumer.requeueRejected=true

# \u9ED8\u8BA4\u5168\u5C40\u5F00\u542Frequeue
# spring.rabbitmq.listener.default-requeue-rejected=true

# \u6B7B\u4FE1\u961F\u5217\u914D\u7F6E
spring.cloud.stream.bindings.dlq-consumer.destination=dlq-topic
spring.cloud.stream.bindings.dlq-producer.destination=dlq-topic
spring.cloud.stream.bindings.dlq-consumer.consumer.max-attempts=2
spring.cloud.stream.bindings.dlq-consumer.group=dlq-group
# \u5F00\u542F\u6B7B\u4FE1\u961F\u5217\uFF08\u9ED8\u8BA4 topic.dlq\uFF09
spring.cloud.stream.rabbit.bindings.dlq-consumer.consumer.auto-bind-dlq=true

# Fallback\u914D\u7F6E
spring.cloud.stream.bindings.fallback-consumer.destination=fallback-topic
spring.cloud.stream.bindings.fallback-producer.destination=fallback-topic
spring.cloud.stream.bindings.fallback-consumer.consumer.max-attempts=2
spring.cloud.stream.bindings.fallback-consumer.group=fallback-group
#input channel ->    fallback-topic.fallback-group.errors

#management.security.enabled=false
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always
